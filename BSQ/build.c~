#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

/* In this file: */
int		**build_map(char *data, int **map, int nr_lines, char *legend);
void		print_map (int **map, int nr_lines, char *legend);
int		build(); // (char *filename);

/* In test.c file: */
int		**making_the_map(int lines);
void	free_map(int **map);

/* In read_from_file.c: */
int		read_dictionary(char *filename, char *data);
int		parse_map(char *data, int **map, int nr_lines, char *legend);
int		read_first_line(char *data, int *p_nr_lines, char *legend);
int		read_line(char *line, int row, int **map, char *legend);
char	*extract_line(char *data, char *line);

/************************************************************/

int	**build_map(char *data, int **map, int nr_lines, char *legend)
{
	int	check;
	map = making_the_map(nr_lines);
	check = 1;
	printf("check: %s %i\n", legend, nr_lines); //			CHECKPOINT
	check = check * parse_map(data, map, nr_lines, legend);
	if (check == 0)
		return 0;
	print_map (map, nr_lines, legend);
	return map;
		// map errors from other lines;
}

/******************************************************/

void print_map (int **map, int nr_lines, char *legend)
{
	int i;
	int j;

	map[0][2] = 2; //		//		//		CHECKPOINT
	i = 0;
	while (i < nr_lines)
	{
		j = 0;
		while (j < nr_lines)
		{
			write (1, &legend[map[i][j]], 1);
			j++;
		}
		i++;
		write (1, "\n", 1);
	}
}


/****************************************************************************/
int	build() //(char *filename)
{
	int		**map;
	int		nr_lines;
	char	*legend;
	char	*line0;
	char	*data;
	int		check;

	data = (char *)malloc(sizeof(char) * 5000);
	if (read_dictionary("map2.in", data) == 0) //"map.in" -> filename
		return (0);
	line0 = (char *)malloc(sizeof(char) * 20);
	extract_line(data, line0);
	legend = (char *)malloc(sizeof(char) * 20);

	if (read_first_line(line0, &nr_lines, legend)) // call map error from line0
		map = build_map(data, map, nr_lines, legend);
	else
		return (0);
	if (map == 0)
	  return 0;
	free(line0);
	free(data);
	//free_map(map, nr_lines);
	return (check); // 0 in case of map errors
}
